@model BlogPostModel
@using Nop.Web.Models.Blogs;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-blogpost-page");
}

<div class="page blogpost-page">
    @Html.Widget("blogpost_page_top", Model.Id)
    <div class="page-title panel-heading">
        <h1>@Model.Title</h1>
    </div>
    <div class="page-body">
       
        @Html.Widget("blogpost_page_before_body", Model.Id)
        <div class="post-body">
            @Html.Raw(Model.Body)
<!-- Go to www.addthis.com/dashboard to customize your tools --> <div class="addthis_sharing_toolbox"></div>
        </div>
			<div class="col-sm-4 col-md-4 float-left">
        @if (Model.Tags.Count > 0)
        {
            <div class="tags">
                <label>See More:</label>
                <ul>
                    @for (int i = 0; i < Model.Tags.Count; i++)
                    {
                        var tag = Model.Tags[i];
                        <li><a href="@Url.RouteUrl("BlogByTag", new { tag = tag })" class="label tag">@tag</a></li>
                        if (i != Model.Tags.Count - 1)
                        {
                            <li class="separator">,</li>
                        }
                    }
                </ul>
            </div>
        }
		
	@*
<div class="line"></div>
<div id="q-contact" class="widget quick-contact-widget clearfix">
<h3 class="highlight-me">Send a Thank You Note</h3>
<p>Appreciate your enhanced Fridge Tips content? Thank the person that sent it to you!</p>
<div class="quick-contact-form-result"></div>
<form id="quick-contact-form" name="quick-contact-form" action="include/quickcontact.php" method="post" class="quick-contact-form nobottommargin" novalidate="">
<div class="form-process"></div>
<input type="text" class="required sm-form-control input-block-level" id="quick-contact-form-name" name="quick-contact-form-name" value="" placeholder="Full Name" aria-required="true" /> <input type="text" class="required sm-form-control email input-block-level" id="quick-contact-form-email" name="quick-contact-form-email" value="" placeholder="Email Address" aria-required="true" /> <textarea class="required sm-form-control input-block-level short-textarea" id="quick-contact-form-message" name="quick-contact-form-message" rows="4" cols="30" placeholder="Message" aria-required="true"></textarea> <input type="text" class="hidden" id="quick-contact-form-botcheck" name="quick-contact-form-botcheck" value="" /> <button type="submit" id="quick-contact-form-submit" name="quick-contact-form-submit" class="button button-small button-green button-3d nomargin" value="submit">Send Email</button></form></div>
</div>

*@
        @Html.Widget("blogpost_page_before_comments", Model.Id)
        @if (Model.AllowComments)
        {
            <div class="fieldset new-comment" id="comments">
                <div class="title">
                    <strong>@T("Blog.Comments.LeaveYourComment")</strong>
                </div>
                @{
                        var validationSummary = Html.ValidationSummary(true);
                }
                <div class="notifications">
                    @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error">@validationSummary</div>
                    }

                    @{
                         var result = TempData["nop.blog.addcomment.result"] as string;
                    }
                    @if (!String.IsNullOrEmpty(result))
                    {
                        <div class="alert alert-success result">@result</div>
                    }
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AddNewComment.CommentText, new { @class = "control-label col-sm-2 col-md-2" })
                            <div class="col-sm-5 col-md-5">
                                @Html.TextAreaFor(model => model.AddNewComment.CommentText, new { @class = "comment-text form-control" })
                            </div>
                            <div class="col-sm-3 col-md-3">
                                @Html.ValidationMessageFor(model => model.AddNewComment.CommentText)
                            </div>
                        </div>
                        @if (Model.AddNewComment.DisplayCaptcha)
                        {
                            <div class="form-group">
                                <div class="captcha-box col-sm-offset-2 col-md-offset-2 col-md-4">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-md-offset-2 col-md-2">
                                <input type="submit" name="add-comment" class="btn btn-primary blog-post-add-comment-button" value="@T("Blog.Comments.SubmitButton")" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            if (Model.Comments.Count > 0)
            {
                <div class="comment-list">
                    <div class="title">
                        <strong>@T("Blog.Comments")</strong>
                    </div>
                    <div class="comments">
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="comment blog-comment">
                                <div class="comment-info col-xs-4 col-sm-2 col-md-2">
                                    <div class="user-info">
                                        @if (comment.AllowViewingProfiles)
                                        {
                                            <a href="@Url.RouteUrl("CustomerProfile", new { id = comment.CustomerId })" class="username">@(comment.CustomerName)</a>
                                        }
                                        else
                                        {
                                            <span class="username">@(comment.CustomerName)</span>
                                        }

                                        @if (!String.IsNullOrEmpty(comment.CustomerAvatarUrl))
                                        {
                                            <div class="avatar">
                                                @if (comment.AllowViewingProfiles)
                                                {
                                                    <a href="@Url.RouteUrl("CustomerProfile", new {id = comment.CustomerId})" class="avatar-img-link">
                                                        <img src="@(comment.CustomerAvatarUrl)" class="avatar-img" alt="avatar" />
                                                    </a>
                                                }
                                                else
                                                {
                                                    <img src="@(comment.CustomerAvatarUrl)" class="avatar-img" alt="avatar" />
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="comment-content col-xs-8 col-sm-10 col-md-10">
                                    <div class="comment-time">
                                        <label>@T("Blog.Comments.CreatedOn"):</label>
                                        <span class="stat-value">@comment.CreatedOn.ToString("g")</span>
                                    </div>
                                    <div class="comment-body">
                                        @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(comment.CommentText, false, true, false, false, false, false))
                                    </div>
                                </div>
                                @Html.Widget("blogpost_page_inside_comment", comment.Id)
                            </div>
                        }
                    </div>
                </div>
            }
        }
        @Html.Widget("blogpost_page_after_comments", Model.Id)
    </div>
    @Html.Widget("blogpost_page_bottom", Model.Id)
</div>
<!-- Go to www.addthis.com/dashboard to customize your tools --> <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-56fd8fddcd811316"></script> 