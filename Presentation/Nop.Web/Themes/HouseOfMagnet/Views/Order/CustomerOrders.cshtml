@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");

    string status = "";
    if (TempData["SelectedTab"] != null)
    {
        status = TempData.Peek("SelectedTab").ToString();
    }
}

@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@*@using Nop.Plugin.DataAccess.GBS;*@

@section left
{
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Orders })
}
<div class="page account-page order-list-page">
    <div class="page-title panel-heading">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerOrders")</h1>
    </div>
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="recurring-payments-box">
                        <div class="panel panel-default">
                            <table class="table table-bordered">
                                <colgroup>
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="a-center start-date">
                                            @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                        </th>
                                        <th class="a-center cycle-info">
                                            @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                        </th>
                                        <th class="a-center next-payment">
                                            @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                        </th>
                                        <th class="a-center total-cycles">
                                            @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                        </th>
                                        <th class="a-center cycles-remaining">
                                            @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                        </th>
                                        <th class="a-center initial-order">
                                            @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                        </th>
                                        <th class="a-center cancel">
                                            @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.RecurringOrders)
                                    {
                                        <tr>
                                            <td class="a-center start-date">
                                                @item.StartDate
                                            </td>
                                            <td class="a-center cycle-info">
                                                @item.CycleInfo
                                            </td>
                                            <td class="a-center next-payment">
                                                @item.NextPayment
                                            </td>
                                            <td class="a-center total-cycles">
                                                @item.TotalCycles
                                            </td>
                                            <td class="a-center cycles-remaining">
                                                @item.CyclesRemaining
                                            </td>
                                            <td class="a-center initial-order">
                                                <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)</a>
                                            </td>
                                            <td class="a-center cancel">
                                                @if (item.CanCancel)
                                                {
                                                    <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="btn btn-default cancel-recurring-order-button" />
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>
            if (Model.RecurringPaymentErrors.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @foreach (var error in Model.RecurringPaymentErrors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = "order_listing_widget", additionalData = Model.Orders })
        @{
            var pagerModel = Model.CustomProperties["PagerModel"] as Nop.Web.Models.Common.PagerModel;

            @*<select class="paging-size-dropdown">
                <option selected="@(pagerModel.PageSize == 5)" value="@Url.RouteUrl("CustomerOrders", new { page=pagerModel.PageIndex,status=status, pageSize=5 })">5</option>
                <option selected="@(pagerModel.PageSize == 10)" value="@Url.RouteUrl("CustomerOrders", new { page=pagerModel.PageIndex,status=status, pageSize=10 })">10</option>
                <option selected="@(pagerModel.PageSize == 15)" value="@Url.RouteUrl("CustomerOrders", new { page=pagerModel.PageIndex,status=status, pageSize=15 })">15</option>
                <option selected="@(pagerModel.PageSize == 20)" value="@Url.RouteUrl("CustomerOrders", new { page=pagerModel.PageIndex,status=status, pageSize=20 })">20</option>
                <option selected="@(pagerModel.PageSize == 25)" value="@Url.RouteUrl("CustomerOrders", new { page=pagerModel.PageIndex,status=status, pageSize=25 })">25</option>
            </select>*@

            var pager = Html.Pager(pagerModel);
            if (!string.IsNullOrEmpty(pager.ToHtmlString()))
            {
                <div class="pager">
                    @pager
                </div>
            }
        }
        <div class="order-list row">
            @if (Model.Orders.Count > 0)
            {
                foreach (var order in Model.Orders)
                {

                    <div class="col_half panel panel-default">
                        <div class="panel-heading">
                            @*<h2 class="panel-title">@T("Account.CustomerOrders.OrderNumber"): @order.Id</h2>*@
                            <h2>@T("Account.CustomerOrders.OrderNumber"): @*@DBManager.getGBSOrderID(order.Id)*@ @order.Id</h2>
                        </div>
                        <div class="panel-body">
                            <ul class="nav">
                                <li>
                                    @T("Account.CustomerOrders.OrderStatus"): <span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span>
                                </li>
                                <li>
                                    @T("Account.CustomerOrders.OrderDate"): @order.CreatedOn.ToString()
                                </li>
                                <li>
                                    @T("Account.CustomerOrders.OrderTotal"): @order.OrderTotal
                                </li>
                            </ul>
                            <div>&nbsp;</div>
                            <div class="buttons">
                                @if (order.IsReturnRequestAllowed)
                                {
                                    @*<input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="btn btn-default return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />*@
                                    <a onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" class="button button-3d button-rounded button-white button-light button-gray"><i class="icon-search"></i>@T("Account.CustomerOrders.ReturnItems")</a>
                                }
                                @*<input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="btn btn-primary order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />*@
                                <a onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" class="button button-3d button-rounded button-white button-light button-gray"><i class="fa fa-info" aria-hidden="true"></i>@T("Account.CustomerOrders.OrderDetails")</a>
                            </div>
                        </div>
                    </div>

                }
            }
            else
            {
                <div class="no-data">
                    @T("Account.CustomerOrders.NoOrders")
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">

    $(function () {
        // bind change event to select
        $('.paging-size-dropdown').on('change', function () {
            var url = $(this).val(); // get selected value
            if (url) { // require a URL
                window.location = url; // redirect
            }
            return false;
        });
    });

</script>
