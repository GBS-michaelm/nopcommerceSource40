@model CheckoutBillingAddressModel
@using Nop.Web.Models.Checkout;
@{
 
}

<div class="page checkout-page">
    <div class="page-title panel-heading">
        <h1>@T("Checkout.BillingAddress")</h1>
    </div>
    <div class="page-body checkout-data">
        @using (Html.BeginRouteForm("CheckoutBillingAddress", FormMethod.Post))
        {
            <div class="billing-addresses">
                @Html.Widget("checkout_billing_address_top")
                @if (Model.ShipToSameAddressAllowed)
                {
                    <div class="section ship-to-same-address">
                        <div class="selector">
                            @Html.CheckBoxFor(x => x.ShipToSameAddress)
                            <label for="@Html.FieldIdFor(model => model.ShipToSameAddress)">@T("Checkout.ShipToSameAddress")</label>
                        </div>
                    </div>
                }
                @Html.Widget("checkout_billing_address_middle")
                <div class="section new-billing-address">
                    <div class="title small-heading">
                        @if (Model.ExistingAddresses.Count > 0)
                        {
                            <strong>@T("Checkout.OrEnterNewAddress")</strong>
                        }
                        else
                        {
                            <strong>@T("Checkout.EnterBillingAddress")</strong>
                        }
                    </div>
                    <div class="enter-address">
                        <div class="message-error">
                            @{
                                var validationSummary = Html.ValidationSummary(true);
                            }
                            @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                            {
                                <div class="message-error">@validationSummary</div>
                            }
                        </div>
                        <div class="enter-address-body form-horizontal">
                            @{
                                var dataDictAddress = new ViewDataDictionary();
                                //Merge ModelState (required for validation)
                                dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                                @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)
                            }
                        </div>
                    </div>
                    @Html.Widget("checkout_billing_address_bottom")
                </div>
                <div class="form-group row next-btn-wrapper">
                    <div class="col-md-6">
                        <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary new-address-next-step-button" />
                    </div>
                </div>
                <div class="section order-summary-body">
                    <div class="title small-heading">
                        <strong>@T("Checkout.OrderSummary")</strong>
                    </div>
                    @Html.Action("OrderSummary", "ShoppingCart")
                </div>
            </div>
            }
    </div>
</div>