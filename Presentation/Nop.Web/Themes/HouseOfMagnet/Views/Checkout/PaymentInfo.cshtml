@model CheckoutPaymentInfoModel
@using Nop.Web.Models.Checkout;
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-payment-info-page");
    CheckoutBillingAddressModel BillingAddresses = ViewBag.BillingAddresses as CheckoutBillingAddressModel;
   var paymentMethod = ViewBag.PaymentMethod as string;
    var paymentMethodValue = ViewBag.PaymentSystemName as string;
}

<div class="page checkout-page payment-info-page col-sm-9 col-md-9 gbs-margin-bottom-20">
    @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Payment })

    <div class="payment-info-wrap gbs-checkout-border gbs-padding-15 row">
        <div class="title large-heading">
            <h3>@T("Checkout.PaymentInfo")</h3>
        </div>
        <div class="payment-info-wrap-inner gbs-padding-15">
            <div class="page-body checkout-data payment-info-form">
                <div class="title small-heading">
                    <strong>Payment Method</strong>
                </div>
                <div class="gbs-margin-bottom-20 gbs-padding-15">
                    @paymentMethod (<a href="/checkout/paymentmethod">edit</a>)
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = "checkout_payment_info_top" })

                @using (Html.BeginRouteForm("CheckoutPaymentInfo", FormMethod.Post))
                {
                    <input type="hidden" name="billingType" id="hdn-billing-type" value="" />
                    <input type="hidden" name="billingID" id="hdn-billing-address-id" value="" />
                    if (paymentMethodValue != "Payments.GBS")
                    {
                        <input type="hidden" name="nextstep" value="Next" />
                    }

                        <div class="info payment-info-form-section">
                            @await Component.InvokeAsync(Model.PaymentViewComponentName)
                        </div>

                    var validationSummary = Html.ValidationSummary(true);
                    if (!string.IsNullOrEmpty(validationSummary.ToString()))
                    {
                        <div class="message-error style-msg errormsg">
                            @validationSummary
                        </div>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $("#payment-method-dropdown").val('New Card');
                                $(".saved-credit-card-input-wrap").show();
                            });
                        </script>

                    }

                }


                <div class="billing-address-form-wrap">
                    @if (paymentMethodValue == "Payments.GBS")
                    {

                        @Html.Partial("_BillingAddressBook", BillingAddresses)
                    }
                </div>

                <div class="gbs-padding-15">
                    <button id="btn-select-saved-card" name="nextstep" class="button button-rounded button-reveal button-small button-green tright"><i class="icon-line-arrow-right"></i><span>Continue</span></button>
                </div>
                <div class="gbs-padding-15">
                    <div class="style-msg infomsg gbs-width-50-percent" id="review-order-msg">
                        <div class="sb-msg"><i class="icon-info-sign"></i><strong>NOTE</strong> You will review this order before it's final</div>
                    </div>
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = "checkout_payment_info_bottom" })
            </div>

            <div class="gbs-required-field-wrap">
                <span class="gbs-required" aria-required="true">*</span> Required Field
            </div>
        </div>

    </div>
</div>

<div class="col-sm-3 col-md-3">
    @await Component.InvokeAsync("GBSOrderTotals", new { additionalData = true })
</div>
<script type="text/javascript">
    var billingChk = '@paymentMethodValue';
    $(document).ready(function () {
        ChooseCreditCardOption($("#payment-method-dropdown").val());
        $("#payment-method-dropdown").change(function () { ChooseCreditCardOption($(this).val()); });
        $("#btn-select-saved-card").click(function () {
            console.log(billingChk);
            if (billingChk == "Payments.GBS") {
                billingFunction();
            }
            selectProfile($("#payment-method-dropdown").val());
        });
        $('.message-error').find('div.validation-summary-errors').addClass('sb-msg');
        $('.message-error li').each(function () {
            $(this).html('<i class="icon-remove"></i>' + $(this).html());
        });
    });
    function ChooseCreditCardOption(option) {
        console.log(option);
        switch (option) {
            case "New Card":
                $(".saved-credit-card-input-wrap").show();
                $(".message-error").show();
                break;
            default:
                $(".saved-credit-card-input-wrap").hide();
                $(".message-error").hide();
                break;
        }
    }
    function selectProfile(ID) {

        if (ID != "New Card" || ID == '') {
            $("#ProfileID").val(ID);
            $(".payment-info-form").children("form").submit();
        } else {

            $(".payment-info-form").children("form").submit();
        }

    }

    function billingFunction()
    {
        var billingDDArr, billingType, billingID;
        if ($("#billing-address-dropdown").val().indexOf(',') !== -1) {
            billingDDArr = $("#billing-address-dropdown").val().split(',');
            billingType = billingDDArr[0];
            billingID = billingDDArr[1];
        }
        else {
            billingType = $("#billing-address-dropdown").val();
            billingID = '';
        }
        $("#hdn-billing-type").val(billingType);
        $("#hdn-billing-address-id").val(billingID);
    }
</script>