@using Nop.Web.Framework;
@using Nop.Core.Infrastructure;
@using Nop.Services.Configuration;
@model Nop.Plugin.BusinessLogic.GBS.Models.MarketCenterGatewayTabsModel
@using Nop.Plugin.BusinessLogic.GBS.Models;
@using Nop.Web.Models.Checkout;
@using Nop.Web.Models.ShoppingCart;
@using Nop.Core;
@using System.Text;
@{

    Layout = "";
    int headerCount = 0;
    int bodyCount = 0;
    StringBuilder headerStringBuilder = new StringBuilder();

}


<div id="marketCenterOuter" class='pricing bottommargin clearfix'>

    <div id="marketCenterInnerWrap">
        <div id="marketCenterSelect">
            <main>
                @{
                    foreach (MarketCenterGatewayTabModel headerTab in Model.MarketCenterTabsList)
                    {

                        if (headerCount == 0)
                        {
                            <input id='tab@(headerCount + 1)' type='radio' name='tabs' checked>
                        }
                        else
                        {
                            <input id='tab@(headerCount + 1)' type='radio' name='tabs'>
                        }


                        <label id='label@(headerCount + 1)' class='gateway-marketcenter-label' for='tab@(headerCount + 1)'> @headerTab.tabName </label>
                        headerCount++;
                    }
                }
                @* maybe a can't find your company tab *@
                @{ 
                    foreach (MarketCenterGatewayTabModel item in Model.MarketCenterTabsList)
                    {
                        @:<section id='content@(bodyCount + 1)'>                                   
                                    @Html.Raw(Model.hiddenAll)
                                    @Html.Partial("MarketCenterGatewayTab", item)
                
                        @:</section>

                        bodyCount++;
                    }
                }
            </main>
        </div>
    </div>   
    
    <div id="mcHiddenWindows" style="display: none;">
        @Html.Raw(Model.hiddenHtml)
    </div>

</div>


<!-- .modal-profile -->
<div class="modal fade modal-profile" tabindex="-1" role="dialog" aria-labelledby="modalProfile" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                    <button class="close" type="button" data-dismiss="modal">×</button>
                    @*<h3 class="modal-title"></h3>*@
                </div>
            <div class="modal-body">
            </div>
            @*<div class="modal-footer">
                    <button class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
        </div>

    </div>
</div>
<!-- //.modal-profile -->

<script>

    $(document).ready(function () {
    
        $('.modal ').insertAfter($('body'));

        $('.modal-body .txt-office-filter').bind('input', function (indx, elem) {

            console.log("Searching");

            //SearchCall(indx, elem);

            var txtId = elem.id;
            var lstId = txtId.replace("txt-office-filter-", "ul-office-list-");


            console.log("id: " + txtId);
            console.log("lastid : " + lstId);

            $("#" + lstId).searchIt({
                itemSelector: 'li',
                $searchInput: $('#' + txtId),
            });
        });


        $("#txt-office-filter-1618").bind('input', function () {
            console.log("Searching 2");
        });

        $('.box-handle').click(function (event) {
            console.log("box handle!");
            event.preventDefault();
            var content = $('.modal-body');
            content.empty();
            //var title = $(this).attr("title");
            //$('.modal-title').html(title);

            var contentHtml = $(this).attr('href');

            console.log($(contentHtml));
            console.log(contentHtml);

            //console.log($(contentHtml).val());

            content.html($(contentHtml).html());
            $(".modal-profile").modal({ show: true });
        });

        
        
        //var obj = jQuery.parseJSON('{ "outer": "#accessoryOuter" , "inner": "#accessoryInnerWrap" }');
        //CustomResize();

        //function CustomResize() {
        //    $(window).resize(obj, function () {

        //        var $c = $('.container'),
        //            $w = $(obj.outer),
        //            totalWidth = $('.footer').outerWidth(),
        //            wellWidth = $c.outerWidth(),
        //            diff = totalWidth - wellWidth,
        //            marg = -Math.floor(diff / 2) + 'px';

        //        console.log("footer width: " + $('.footer').outerWidth());
        //        console.log("container width: " + $c.outerWidth());
        //        console.log("");

        //        $w.each(function () {
        //            $(this).css({
        //                'margin-left': marg,
        //                'margin-right': marg
        //            });
        //        })

        //        $(obj.inner).width($(".container").width());

        //    });

        //    $(window).resize();
        //}


    });
    
    $("#txt-office-filter-1618").bind('input', function () {
        alert("Change detected!");
    });
    
    function SearchCall(elem) {
        console.log("Searching");

        var txtId = $(elem).attr('id');
        var lstId = txtId.replace("txt-office-filter-", "ul-office-list-");


        console.log("id: " + txtId);
        console.log("lastid : " + lstId);       
        console.log("input attr val : " + $(elem).attr('value'));       

        var filterList = $(elem).closest('.search-filter-wrap').siblings('.dv-office-list').find('.ul-office-list').attr('id');

        console.log("filter list id: " + filterList);

        $($(elem).closest('.search-filter-wrap').siblings('.dv-office-list').find('.ul-office-list')).searchIt({
            itemSelector: 'li',
            //$searchInput: $('#' + txtId),
            //$searchInput: $(elem).attr('value'), //breaks
            $searchInput: $(elem), //works but fails on spaces
            //inputLabelValue: $(elem), //does weird things
            //inputLabelValue: $(elem).attr('value'), // even weirder
        });
        
    }

    //display this result when search button is clicked. still filter on key up stroke.
    function FeaturedSearchCall(elem) {

        console.log("featured Searching");
        
        //$("#featuredSearchList").searchIt({ //name of container
        //    itemSelector: 'a',
        //    $searchInput: $(elem),
        //});
        var selected = $(elem).closest('.all-search-wrap').find('.allSearchList');
        console.log("selected: " + selected);

        if ($(elem).val() > 1) {

        }

        //$($(elem).find('.all-select')).searchIt({ //name of container
        $($(elem).closest('.all-search-wrap').find('.allSearchList')).searchIt({

            itemSelector: 'li',
            $searchInput: $(elem),
        });
    }
    
</script>


