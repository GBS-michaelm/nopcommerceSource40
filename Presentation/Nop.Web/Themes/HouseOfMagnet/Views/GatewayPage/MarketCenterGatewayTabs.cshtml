@using Nop.Web.Framework;
@using Nop.Core.Infrastructure;
@using Nop.Services.Configuration;
@model Nop.Plugin.BusinessLogic.GBS.Models.MarketCenterGatewayTabsModel
@using Nop.Plugin.BusinessLogic.GBS.Models;
@using Nop.Web.Models.Checkout;
@using Nop.Web.Models.ShoppingCart;
@using Nop.Core;
@using System.Text;
@{

    Layout = "";
    int headerCount = 0;
    int bodyCount = 0;
    StringBuilder headerStringBuilder = new StringBuilder();

}


<div id="marketCenterOuter" class='pricing bottommargin clearfix'>

    <div id="marketCenterInnerWrap">
        <div id="marketCenterSelect">
            <main>
                @{
                    foreach (MarketCenterGatewayTabModel headerTab in Model.MarketCenterTabsList)
                    {

                        if (headerCount == 0)
                        {
                            <input id='tab@(headerCount + 1)' type='radio' name='tabs' checked>
                        }
                        else
                        {
                            <input id='tab@(headerCount + 1)' type='radio' name='tabs'>
                        }


                        <label id='label@(headerCount + 1)' class='gateway-marketcenter-label' for='tab@(headerCount + 1)'> @headerTab.tabName </label>
                        headerCount++;
                    }
                }
                @* maybe a can't find your company tab *@
                @{

                    @Html.Raw(Model.hiddenAll)

                    foreach (MarketCenterGatewayTabModel item in Model.MarketCenterTabsList)
                    {

                        @:<section id='content@(bodyCount + 1)' class='scroll-find' >                              
                                    
                                    @Html.Partial("MarketCenterGatewayTab", item)
                
                        @:</section>

                        bodyCount++;
                    }
                }
            </main>
        </div>
    </div>   
    
    <div id="mcHiddenWindows" style="display: none;">
        @Html.Raw(Model.hiddenHtml)
    </div>

</div>


<!-- .modal-profile -->
<div class="modal fade modal-profile" tabindex="-1" role="dialog" aria-labelledby="modalProfile" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                    <button class="close" type="button" data-dismiss="modal">×</button>
                    @*<h3 class="modal-title"></h3>*@
                </div>
            <div class="modal-body">
            </div>
            @*<div class="modal-footer">
                    <button class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
        </div>

    </div>
</div>
<!-- //.modal-profile -->

<script>

    $(document).ready(function () {
    
        $('.modal ').insertAfter($('body'));

        $('.modal-body .txt-office-filter').bind('input', function (indx, elem) {

            //console.log("Searching");

            //SearchCall(indx, elem);

            var txtId = elem.id;
            var lstId = txtId.replace("txt-office-filter-", "ul-office-list-");


            console.log("id: " + txtId);
            console.log("lastid : " + lstId);

            $("#" + lstId).searchIt({
                itemSelector: 'li',
                $searchInput: $('#' + txtId),
            });
        });


        //$("#txt-office-filter-1618").bind('input', function () {
        //    //console.log("Searching 2");
        //});

        $('.box-handle').click(function (event) {
            console.log("box handle!");
            event.preventDefault();
            var content = $('.modal-body');
            content.empty();
            //var title = $(this).attr("title");
            //$('.modal-title').html(title);

            var contentHtml = $(this).attr('href');

            console.log($(contentHtml));
            console.log(contentHtml);

            //console.log($(contentHtml).val());

            content.html($(contentHtml).html());
            $(".modal-profile").modal({ show: true });
        });            

    });
    
    //$("#txt-office-filter-1618").bind('input', function () {
    //    alert("Change detected!");
    //});
    
    function SearchCall(elem) {
        console.log("Searching");

        var txtId = $(elem).attr('id');
        var lstId = txtId.replace("txt-office-filter-", "ul-office-list-");


        console.log("id: " + txtId);
        console.log("lastid : " + lstId);       
        console.log("input attr val : " + $(elem).attr('value'));       

        var filterList = $(elem).closest('.search-filter-wrap').siblings('.dv-office-list').find('.ul-office-list').attr('id');

        console.log("filter list id: " + filterList);

        $($(elem).closest('.search-filter-wrap').siblings('.dv-office-list').find('.ul-office-list')).searchIt({
            itemSelector: 'li',          
            $searchInput: $(elem),           
        });
        
    }

    function FeaturedSearchCall(elem) {

        console.log("featured Searching");
                
        var selected = $(elem).closest('.all-search-wrap').find('.allSearchList');
        console.log("selected: " + selected);

        if ($(elem).val()) {
            console.log("show");
            //$(".no-company-found").hide();
            //might have to search to overload top lvl hide
            $(elem).closest('.all-search-wrap').find('.allSearchList').show();
            //$(".no-company-found").hide();

        } else {
            console.log("hide");
            //TODO
            //set up a no results found <li>
            $(".no-company-found").show();
            //$(elem).closest('.all-search-wrap').find('.allSearchList').hide();
        }
     
        $($(elem).closest('.all-search-wrap').find('.allSearchList')).searchIt({
            itemSelector: 'li',
            $searchInput: $(elem),
        });
    }
    
    //sticky filter js
    function isScrolledTo(elem, win) {

        var docViewTop = $(win).scrollTop(); //num of pixels hidden above current screen
        var docViewBottom = docViewTop + $(window).height();

        //console.log("isScrolledToElem: " + elem);
        //console.log("top position: " + $(elem).offset().top); //value that top holds


        //var elemTop = $(elem).offset().bottom;
        var elemTop = $(elem).offset().top; //num of pixels above the elem
        var elemBottom = elemTop + $(elem).height();

        return ((elemTop <= docViewTop));
    }

    
    //var container = $('#container');  
    //var bottomStop = $("#bottom_container");

    $(window).scroll(function () {


    });

    //$('.scroll-find').scroll(function () {
        //console.log("scrolling");

        //var search = $(this).find('.all-search-wrap');

        //var scrollpos = $(this).scrollTop();


        //if (scrollpos != 0) {
        //    console.log('go to fixed');
        //    search.addClass('all-search-fixed');
        //} else {
        //    console.log('stop fixed');
        //    search.removeClass('all-search-fixed');
        //}

        //if (scrollpos == $(this).height - 100) {
        //    search.css('position', 'absolute');
        //    search.css('top', $(this).height - 100);          
        //}

        //var id = $(this).attr('id');
        //console.log("scroll id: " + id);

        //var catcher = $(this).find('.stickCatcher');
        //var sticky = $(this).find('.stickWithMe');
        ////var bottomStop = $(this).find('.scrollStopper');

        //var scrollpos = $(this).scrollTop();
        //console.log("scroll position: " + scrollpos.toString());

        //if (isScrolledTo(sticky, $(this)) | !isScrolledTo(bottomStop), $(this)) {
        //    console.log("sticky hit");
        //    //sticky.css('position', 'fixed');
        //    //sticky.css('top', '0px');
        //}
        //var stopHeight = catcher.offset().top + catcher.height();
        //if (stopHeight > sticky.offset().top) {
        //    sticky.css('position', 'absolute');
        //    sticky.css('top', stopHeight);
        //}

        //var bottomStopHeight = bottomStop.offset().top;
        //if (bottomStopHeight < sticky.offset().top + sticky.height()) { // stop above footer
        //    sticky.css('position', 'absolute');
        //    sticky.css('top', bottomStopHeight - sticky.outerHeight() - 10); // a bit of padding
        //}

    //});


</script>


