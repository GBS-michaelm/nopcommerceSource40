@using System.Data.Entity;
@using Nop.Plugin.DataAccess.GBS;
@using Nop.Core;
@using Nop.Core.Domain.Catalog;
@using Nop.Core.Infrastructure;
@using Nop.Web.Framework.Themes;
@using System.Data;
@using System.Text;
@using Nop.Services.Catalog;
@using Nop.Plugin.BusinessLogic.GBS.Domain;

@{
    Layout = "~/Views/Shared/_Root.cshtml";
}
@{

//current category ID
//int currentCategoryId = 0;
//if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
//    Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
//{
//    currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
//}

////current manufacturer ID
//int currentManufacturerId = 0;
//if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
//    Url.RequestContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
//{
//    currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
//}

////current product ID
//int currentProductId = 0;
//if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
//    Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
//{
//    currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
//}
}

@{
    int id = @Model.Id;
}

@{ 
    //chart to load
    string chart = "";

    //*** set data to hold which chart will load depending on parent category *** 


    //if (@Model.Name.Contains("Specialty"))
    //{
    //    chart = "hom_specialty_magnets_product_options_chart";
    //}

}

@{

    MarketCenter marketCenter = new MarketCenter(id);
    string h1 = marketCenter.h1;
    string h2 = marketCenter.h2;
    string topText = marketCenter.topText;
    string bottomText = marketCenter.bottomText;
    string backgroundColor = marketCenter.backgroundColor;
    string foregroundImage = marketCenter.foregroundImage;
    string backgroundImage = marketCenter.backgroundImage;

}

@if (IsSectionDefined("Breadcrumb"))
{
    @section Breadcrumb {
        @RenderSection("Breadcrumb")
    }
}

@if (Model.DisplayCategoryBreadcrumb)
{
    <div id="gatewayBreadcrumb" class="breadcrumb-wrapper">
        <ul class="breadcrumb">
            <li>
                <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")"><i class="fa fa-home"></i></a>
                @*<span class="delimiter">@breadcrumbDelimiter</span> </li>*@
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                <li>
                    @if (isLastCategory)
                    {
                        <strong class="current-item active">@cat.Name</strong>
                    }
                    else
                    {
                        <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                        @*<span class="delimiter">@breadcrumbDelimiter</span>*@
                    }
                </li>
                }
            </ul>
        </div>
}

    <div id="gatewayPageTitle" class="page-title panel-heading gateway-title">
                
        @* h1 from db *@
        <h1 id="gatewayH1" class="gateway-h1">@h1</h1>

        <div class="gateway-h2-wrap">
            @* h2 from db *@
            <p class="gateway-h2"><span >@h2</span></p>
        </div>

    </div>
         
    <div>@*salewidgethere*@</div>
    <div id="gateway-body" style="background-color : @backgroundColor;" class="bottommargin topmargin ">
        <div id="gateway-body-inner" style="background-image: url(@backgroundImage)">
           <input id="cssChange" type="hidden" value="" />
           <input id="originalBodyHeight" type="hidden" value="" />
           
            @*<div id="gateway-inner">*@   
            <div id="topInner">
                <p id="gatewayTopText">
                    @topText
                </p>
            </div> 
            <div id="gatewayLayersContainer" >
                   
                <div id="gatewayWYSIWYG" class="sports-wysiwyg">                                             
                    @Html.Action("GatewayCatalogProducts", "GatewayPage", new { type = "sportsTeam", id = id})
                </div>
                @* foreground image from db *@
                @*<div id="sportImage">
                    <img id="gatewayForegroundImage" class="" src="@foregroundImage" />
                </div>*@
                @**@
                @* background images from db *@                       
            </div>
            <div id="bottomInner">
                <p id="gatewayBottomText">
                    @bottomText
                </p>
            </div>
                
            @*</div>*@
            
        </div>
    </div>

        <script>
            
            $(document).ready(function () {
                            
                //hide gateway show team box
                //if ($("#hasTeam").val() == "true") {
                //    $("#gatewayWYSIWYG").hide();
                //    $("#teamSelect").show();
                //    $("#label1").click();
                //} else {
                //    $("#teamSelect").remove();
                //}

                $(".team-from-list").click(function () {
                    
                    //console.log($(this).attr('id'));

                    LoadTeamCategoryProducts($(this).attr('id'));
                    
                    $("#selectedTeam").html("Team Selected : " + $(this).text() + "  ");

                    
                    //SetTeam($(this).text());

                    //$("#gatewayWYSIWYG").show();
                    $("#teamSelect").hide(3000, "linear");
                    $("#selectTeamDiv").show();
                    //$("#gatewayTopText").html(" ");


                    //PageBodyResizeForMultipleProductRows("sports-wysiwyg");

                })

                $("#changeSelectedTeam").click(function () {
                    $("#gatewayWYSIWYG").hide();
                    $("#teamSelect").show();
                    $("#selectTeamDiv").hide();
                    //PageBodyResizeForMultipleProductRows("");
                })

                //$("#cssChange").click(function() {

                //    //console.log("cur h1 test");

                //    var type = $("#gatewayH1").html();

                //    //console.log(type);

                //    switch (type) {
                //        case "Specialty Magnets":
                //            $("#gatewayForegroundImage").addClass("gateway-foreground-specialty");
                //            $("#gatewayWYSIWYG").addClass("regular-wysiwyg");
                //            break;

                            


                //        default:
                //            $("#gatewayForegroundImage").addClass("gateway-foreground-sports");
                //            $("#gatewayWYSIWYG").addClass("sports-wysiwyg");
                //            break;
                //    }
                //});

                function LoadTeamCategoryProducts(id) {

                    var link = "sportsgateway/GatewayCatalogProducts/sportsTeam/" + id;
                    //console.log(id)

                    $.ajax({
                        type: "GET",
                        url: link,             
                        cache: false,
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        dataType: "html",
                        success: function (msg) {
                            console.log("success");                          
                            console.log(msg);
                            console.log(msg.message);
                            
                            

                            $("#gatewayWYSIWYG").html(msg);
                            $("#gatewayWYSIWYG").show();
                            //$("#gatewayTopText").html(msg.h1);


                        },
                        error: function (msg) {
                            console.log("error");
                            console.log(msg);
                            console.log(msg.d);
                        },
                        complete: function (data) {

                        },

                    });
                }


               
                var obj = jQuery.parseJSON('{ "outer": "#videoAndQuantityCalculatorWrap" , "inner": "#innerVidAndWQtyCalc" }');
                CustomResize();
                
                obj = jQuery.parseJSON('{ "outer": "#gateway-body" , "inner": "#gateway-body-inner" }');
                CustomResize();

                function CustomResize() {
                    $(window).resize(obj, function () {
                                                                       
                        var $c = $('.container'),
                            $w = $(obj.outer),
                            totalWidth = $('.footer').outerWidth(),                         
                            wellWidth = $c.outerWidth(),
                            diff = totalWidth - wellWidth,
                            marg = -Math.floor(diff / 2) + 'px';

                        console.log("footer width: " + $('.footer').outerWidth());
                        console.log("container width: " + $c.outerWidth());
                        console.log("");

                        $w.each(function () {
                            $(this).css({
                                'margin-left': marg,
                                'margin-right': marg
                            });
                        })

                        $(obj.inner).width($(".container").width());
                        //$(".gateway-foreground-sports-team").height($(obj.inner).height());

                    });

                    $(window).resize();
                }

                function PageBodyResizeForMultipleProductRows(currentWYSIWYG) {
                    if (currentWYSIWYG != null && currentWYSIWYG != "") {
                        //save original height incase team is changed
                        $("#originalBodyHeight").val($("#gateway-body").height());
                        //change body height for multiple row products
                        var newHeight = parseInt($("." + currentWYSIWYG).height() + 180) + "px";
                        $("#gateway-body").height(newHeight);
                        $("#gateway-inner").height(newHeight);


                        if ($("#gateway-body").height() > 900) {
                            //football foreground image adjust, check if wysiwyg height is greater than a single rows height.
                            //$("#gatewayForegroundImage").addClass("gateway-foreground-sports-multirow");
                        }
                        
                    } else {
                        $("#gateway-body").height($("#originalBodyHeight").val());
                        $("#gateway-inner").height($("#originalBodyHeight").val());
                        
                        $("#gatewayForegroundImage").removeClass("gateway-foreground-sports-multirow");
                    }
                    
                }

                //function SetTeam(team) {                   
                //    $(".team-handle").each(function () {
                //        //replace space with dash
                //        var current = $(this).attr("href");
                //        var teamNoSpace = team.replace(/\s+/g, '-');

                //        if(current.indexOf("?") >= 0){
                //            var splitURL = current.split('?');
                //            $(this).attr("href", splitURL[0] + "?team=" + teamNoSpace);
                //            console.log("split ver: " + splitURL[0] + "?team=" + teamNoSpace);

                //        }else{
                //            $(this).attr("href", current + "?team=" + teamNoSpace);
                //            console.log("new ver: " + current + "?team=" + teamNoSpace);
                //        }
                        
                //    })                    
                //}
                
                $("#gateway-inner").height($("#gateway-body").height());
                
                $("#cssChange").click();
                
                //remove topic header
                $("#chartWrap div.panel-heading").remove();
                
                $("#videoAndQuantityCalculatorWrap div.panel-heading").remove();

                function HeightHandle() {
                    
                    console.log("height handle called");

                    var newHeight = parseInt($("#gatewayWYSIWYG").height() + 350) + "px";
                    
                    $("#gateway-body").height(newHeight);
                    $("#gateway-inner").height(newHeight);
                }

                //$(window).resize(CustomResize(obj));
                

                //992px switches to mobileish screen

            });



        </script>


@{
    //Loading extra topics

    if (!string.IsNullOrEmpty(@chart))
    {
        <div id="chartWrap">
            <div id="chartSection">
                @Html.Action("TopicBlock", "Topic", new { systemName = @chart.ToString() })
            </div>
        </div>
    }

    @*<div id="videoAndQuantityCalculatorWrap">
        <div id="innerVidAndWQtyCalc">
            @Html.Action("TopicBlock", "Topic", new { systemName = "hom_video_quantity_chart" })
        </div>
    </div>*@

    <div>
        @Html.Action("TopicBlock", "Topic", new { systemName = "hom_calendar_reorder_steps" })
    </div>

    <div>
        @Html.Action("TopicBlock", "Topic", new { systemName = "hom_product_features_notepads" })
    </div>

    <div>
        @Html.Action("TopicBlock", "Topic", new { systemName = "hom_testimonials" })
    </div>
    <div>
        @Html.Action("TopicBlock", "Topic", new { systemName = "hom_accessories_specialty_magnets" })
    </div>
    <div>
        @Html.Action("TopicBlock", "Topic", new { systemName = "hom_opc_video" })
    </div>


}



   
@*<div class="category-section">
    <div class="row">
        @*<div class="col-sm-6">
<img alt="@Model.PictureModel.AlternateText" src="@Model.PictureModel.ImageUrl" title="@Model.PictureModel.Title" width="569" height="374" />
</div>*@
        @*<div class="col-sm-6">
            <div class="row">
                <div class="col-sm-6 small-category"><img src="/Themes/SimplexTheme/Content/images/categoryimg1.jpg" width="269" height="173" alt="" /></div>
                <div class="col-sm-6 small-category"><img src="/Themes/SimplexTheme/Content/images/categoryimg2.jpg" width="269" height="173" alt="" /></div>
                <div class="col-sm-6"><img src="/Themes/SimplexTheme/Content/images/categoryimg3.jpg" width="269" height="173" alt="" /></div>
                <div class="col-sm-6"><img src="/Themes/SimplexTheme/Content/images/categoryimg4.jpg" width="269" height="173" alt="" /></div>
            </div>
        </div>*@
    @*</div>*@
@*</div>*@
    
@*<div class="listing-page">
    <div class="sidebar col-md-3">
        <div class=" sidebar-title">
            <h3>Refine Your Choices</h3>
            <a href="#">Clear</a>
        </div>
        @if (IsSectionDefined("left"))
        {
            @RenderSection("left")
        }
        else
        {
            @Html.Widget("left_side_column_before")
			@Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })*@
            
            @*@Html.Widget("left_side_column_after_category_navigation")
            @Html.Action("ManufacturerNavigation", "Catalog", new { currentManufacturerId = currentManufacturerId })
            @Html.Action("VendorNavigation", "Catalog")*@
            @*@Html.Action("PopularProductTags", "Catalog")*@
            @*@Html.Action("RecentlyViewedProductsBlock", "Product", new { productThumbPictureSize = 64 })*@
            @*@Html.Action("PollBlock", "Poll", new { systemKeyword = "LeftColumnPoll" })
            @Html.Widget("left_side_column_after")
        }
    </div>*@
    <div class="side-content col-md-9">
        @*@Html.Widget("main_column_before")*@
        @RenderBody()
        @*@Html.Widget("main_column_after")*@
    </div>
@*</div>*@







@*function LoadTeamCategoryProducts(id) {

                    var link = "sportsgateway/GatewayCatalogProducts/sportsTeam/" + id;
                    //console.log(id)

                    $.ajax({
                        type: "GET",
                        url: link,
                        cache: false,
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {
                            console.log("success");
                            console.log(msg);
                            console.log(msg.message);

                            $("#gatewayWYSIWYG").html(msg);
                            $("#gatewayWYSIWYG").show();
                            //$("#gatewayTopText").html(msg.h1);


                        },
                        error: function (msg) {
                            console.log("error");
                            console.log(msg);
                            console.log(msg.d);
                        },
                        complete: function (data) {

                        },

                    });
                }*@