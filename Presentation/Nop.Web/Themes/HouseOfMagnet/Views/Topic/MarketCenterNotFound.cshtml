@model TopicModel
@using Nop.Core.Domain.Seo
@using Nop.Core.Infrastructure
@using Nop.Web.Framework.Themes
@using Nop.Web.Models.Topics;
@using Nop.Plugin.BusinessLogic.GBS.Domain;
@using System.Collections.Specialized;
@{
    var isPopup = ViewBag.IsPopup;

    var themeName = EngineContext.Current.Resolve<IThemeContext>().WorkingThemeName;

    if (isPopup == null || isPopup == false)
    {
        Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    }

    if (!Model.IsPasswordProtected)
    {
        //title
        Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
        //meta
        Html.AddMetaDescriptionParts(Model.MetaDescription);
        Html.AddMetaKeywordParts(Model.MetaKeywords);
    }

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var topicUrl = Url.RouteUrl("Topic", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(topicUrl);
    }

    //page class
    Html.AppendPageCssClassParts("html-topic-page");


    //Html.AppendCssFileParts(string.Format("~/Themes/{0}/Content/css/hom-quantity-calculator.css", themeName));
    //Html.AddScriptParts("~/Themes/HouseOfMagnet/Content/js/hom-quantity-calculator.js");
    //Html.AppendPageCssClassParts("html-category-page");

}

@*<div class="page topic-page" id="ph-topic">*@
    @*<div id="ph-title">
        <div class="page-title panel-heading">*@
            @*<h1>@Model.Title</h1>*@
    
                
        @*</div>
    </div>*@

    @{ 
        string marketCenterId = "";
        string marketCenterType = "";
    }


    @{ 
        NameValueCollection nvc = Request.QueryString;
        if (nvc.HasKeys())
        {
            for (int i = 0; i < nvc.Count; i++)
            {
                string key = nvc.GetKey(i);

                if (key == "company")
                {
                    marketCenterId = nvc.Get(i);
                }
                if(key == "type")
                {
                    marketCenterType = nvc.Get(i);
                }
            }
        }
    }

    @{ 
        MarketCenter marketcenter = MarketCenter.GetMarketCenter(Int32.Parse(marketCenterId));

        string mcName = marketcenter.Name;
        
        //maybe check parse int on type, if int then use spec attr to get name else use string

    }

    <div class="page-body">
        @Html.Raw(Model.Body)
    </div>


    <div>
        <p>under the wyg</p>


        <p>Your Company <b>@mcName</b> doesn't have a market center of this type.</p>
        <p>Go here to fix that -> <a href="">Link to nowhere</a></p>

    </div>


@*</div>*@
