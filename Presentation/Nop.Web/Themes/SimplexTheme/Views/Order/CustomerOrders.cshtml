@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}

@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@using Nop.Plugin.DataAccess.GBS;

@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Orders })
}
<div class="page account-page order-list-page">
    <div class="page-title panel-heading">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerOrders")</h1>
    </div>
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="recurring-payments-box">
                        <div class="panel panel-default">
                            <table class="table table-bordered">
                                <colgroup>
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="a-center start-date">
                                            @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                        </th>
                                        <th class="a-center cycle-info">
                                            @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                        </th>
                                        <th class="a-center next-payment">
                                            @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                        </th>
                                        <th class="a-center total-cycles">
                                            @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                        </th>
                                        <th class="a-center cycles-remaining">
                                            @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                        </th>
                                        <th class="a-center initial-order">
                                            @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                        </th>
                                        <th class="a-center cancel">
                                            @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.RecurringOrders)
                                    {
                                        <tr>
                                            <td class="a-center start-date">
                                                @item.StartDate
                                            </td>
                                            <td class="a-center cycle-info">
                                                @item.CycleInfo
                                            </td>
                                            <td class="a-center next-payment">
                                                @item.NextPayment
                                            </td>
                                            <td class="a-center total-cycles">
                                                @item.TotalCycles
                                            </td>
                                            <td class="a-center cycles-remaining">
                                                @item.CyclesRemaining
                                            </td>
                                            <td class="a-center initial-order">
                                                <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)</a>
                                            </td>
                                            <td class="a-center cancel">
                                                @if (item.CanCancel)
                                                {
                                                    <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="btn btn-default cancel-recurring-order-button" />
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>
            if (Model.RecurringPaymentErrors.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @foreach (var error in Model.RecurringPaymentErrors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        }
        @Html.Widget("order_listing_widget", Model.Orders)
        @{
            var pager = Html.Pager(Model.CustomProperties["PagerModel"] as Nop.Web.Models.Common.PagerModel);
            if (!MvcHtmlString.IsNullOrEmpty(pager))
            {
                <div class="pager">
                    @pager
                </div>
            }
        }
    </div>
</div>
