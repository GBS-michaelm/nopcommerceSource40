@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@using Nop.Plugin.Widgets.CustomersCanvas.Services;
@using Nop.Plugin.Checkout.GBS;
@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}
@{

    var ccService = EngineContext.Current.Resolve<ICcService>();
    GBSCheckout gbs = new GBSCheckout();
    var helpers = gbs._helper;
    Model.CustomProperties = helpers.GetNoteCardSetCount();
}

<script type="text/javascript" src="/Themes/SimplexTheme/Content/js/modal.js"></script>
<script type="text/javascript">

    $(function () {
        SetImageModal('.detailimg');

    });

</script>
@Html.Partial("_ImageModal")

<div class="order-summary-content">
    @Html.Widget("order_summary_content_before")
    @Html.Partial("_OrderReviewData", Model.OrderReviewData)
    @if (Model.Items.Count > 0)
    {
        if (Model.Warnings.Count > 0)
        {
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }
        @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@

        using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data", id = "shopping-cart-form" }))
        {

            <div class="update-continue-button">
                <div class="common-buttons pull-right">
                    <div class="continue-shopping">
                        @*<input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-link" />*@
                    </div>
                    <div class="update-cart">
                        <button type="submit" name="checkout" value="checkout" class="button button-rounded button-reveal button-large button-green tright btn-order-summary-check-out-top"><i class="icon-line-arrow-right"></i> <span>@T("Checkout.Button")</span></button>
                    </div>
                </div>
            </div>
            @Html.AntiForgeryToken()
            <div class="panel panel-default cart-item-table">
                <table class="cart table table-bordered">
                    <colgroup>
                        @if (Model.IsEditable)
                        {
                            <col width="1" />
                        }
                        @if (Model.ShowSku)
                        {
                            <col width="1" />
                        }
                        @if (Model.ShowProductImages)
                        {
                            <col width="1" />
                        }
                        <col />
                        <col width="1" />
                        <col width="1" />
                        <col width="1" />
                    </colgroup>
                    <thead class="hidden-xs gbs-progress-bar-border">
                        <tr class="cart-header-row">
                            @if (Model.ShowProductImages)
                            {
                                <th class="picture">
                                    @T("ShoppingCart.Image")
                                </th>
                            }
                            <th class="products-title">
                                @T("ShoppingCart.Product(s)")
                            </th>
                            @*<th>
                                    @T("ShoppingCart.UnitPrice")
                                </th>*@
                            <th>
                                @T("ShoppingCart.Quantity")
                            </th>
                            <th class="end">
                                @T("ShoppingCart.ItemTotal")
                            </th>
                            @if (Model.IsEditable)
                            {
                                <th>
                                    @T("ShoppingCart.Remove")
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items.Reverse())
                        {
                            <tr class="cart-item-row hidden-xs desktop-original">

                                @if (Model.ShowProductImages)
                                {
                                    <td class="product-picture">
                                        @*<a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>*@
                                        @*@Html.Widget("product_details_widget", item.ProductId)*@
                                        @Html.Widget("shoppingcart_custom_image", item.Id)

                                    </td>
                                }
                                <td class="product-info">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                    @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                    {
                                        <div class="attributes">
                                            @if (item.AttributeInfo.Contains("Add Return Address: Yes"))
                                            {
                                                @Html.Raw(item.AttributeInfo)<br />

                                                @Html.Raw("Add Return Address: $5.00 Minimum")
                                            }
                                            else
                                            {
                                                @Html.Raw(item.AttributeInfo)
                                            }

                                        </div>
                                    }
                                    @if (Model.CustomProperties != null)
                                    {
                                        if (Model.CustomProperties.ContainsKey(item.ProductId.ToString()))
                                        {



                                            <div class="specification-info">
                                                @Html.Raw(Model.CustomProperties[item.ProductId.ToString()])
                                            </div>


                                        }
                                    }
                                    @if (Model.ShowSku)
                                    {
                                        <div class="sku-info">
                                            <strong>@T("ShoppingCart.SKU"):</strong> @Html.Raw(item.Sku)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                    {
                                        <div class="recurring-info">
                                            @Html.Raw(item.RecurringInfo)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.RentalInfo))
                                    {
                                        <div class="rental-info">
                                            @Html.Raw(item.RentalInfo)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.ProductId.ToString()))
                                    {
                                        <div class="product-specification">

                                        </div>
                                    }

                                    @if (ccService.IsProductForCc(item.ProductId))
                                    {
                                        //var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                        //editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);

                                        var editCartItemUrl = Url.Action("EditorPage", "CcWidget", new { productId = item.ProductId });
                                        editCartItemUrl += "&quantity=" + item.Quantity + "&updateCartItemId=" + item.Id;

                                        <div class="edit-item">
                                            <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                        </div>
                                    }
                                    else if (Model.IsEditable && item.AllowItemEditing)
                                    {
                                        var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                        editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);

                                        <div class="edit-item">
                                            <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                        </div>
                                    }

                                    @if (item.Warnings.Count > 0)
                                    {
                                        <div class="message-error">
                                            <ul>
                                                @foreach (var warning in item.Warnings)
                                                {
                                                    <li>@warning</li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                </td>

                                @*<td class="unit-price">
                                        <label class="td-title">@T("ShoppingCart.UnitPrice"):</label>
                                        <span class="product-unit-price">@item.UnitPrice</span>
                                    </td>*@

                                <td class="qty nobr">
                                    @if (Model.IsEditable)
                                    {
                                        if (item.AllowedQuantities.Count > 0)
                                        {
                                            <select name="itemquantity@(item.Id)" class="qty-dropdown form-control">
                                                @foreach (var qty in item.AllowedQuantities)
                                                {
                                                    <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                }
                                            </select>
                                        }
                                        else
                                        {
                                            <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input form-control" autocomplete="off" />
                                        }

                                    }
                                    else
                                    {
                                        <span>@item.Quantity</span>
                                    }
                                </td>
                                <td class="subtotal nobr end">
                                    <span class="product-subtotal gbs-text-green">@item.SubTotal</span>
                                    @if (!String.IsNullOrEmpty(item.Discount))
                                    {
                                        <div class="discount">
                                            @T("ShoppingCart.ItemYouSave"): @item.Discount
                                        </div>
                                    }
                                </td>

                                @if (Model.IsEditable)
                                {
                                    <td class="remove-from-cart">
                                        <span class="visible-xs hidden-lg hidden-md hidden-sm">@T("ShoppingCart.Remove")</span>
                                        <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                    </td>
                                }
                                else
                                {
                                    <td class="remove-from-cart" style="display: none;">
                                        <span class="visible-xs hidden-lg hidden-md hidden-sm">@T("ShoppingCart.Remove")</span>
                                        <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                    </td>
                                }
                            </tr>

                            /* This code used only for mobile device */
                            <tr class="shopping-cart-small-wrapper visible-xs mobile-duplicate">
                                <td>
                                    <div class="product-wrapper">
                                        <div class="remove-addtocart-checkbox">
                                            @if (Model.IsEditable)
                                            {
                                                <div class="remove-from-cart">
                                                    <label class="custom-checkbox">
                                                        <input type="checkbox" name="removefromcart" value="@(item.Id)" id="@(item.Id)-res" />
                                                        <label for="@(item.Id)-res"></label>
                                                    </label>
                                                    <span>@T("ShoppingCart.Remove")</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="product-content-wrapper">
                                            <div class="product-image">
                                                @if (Model.ShowProductImages)
                                                {
                                                    <div class="product-picture">
                                                        @*<img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />*@
                                                        @Html.Widget("product_details_widget", item.ProductId)
                                                    </div>
                                                }
                                            </div>
                                            <div class="product-name-sku">
                                                <div class="product">
                                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                                    @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                                    {
                                                        <div class="attributes">
                                                            @Html.Raw(item.AttributeInfo)
                                                        </div>
                                                    }
                                                    @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                                    {
                                                        <div class="recurring-info">
                                                            @Html.Raw(item.RecurringInfo)
                                                        </div>
                                                    }
                                                    @if (item.Warnings.Count > 0)
                                                    {
                                                        <div class="message-error">
                                                            <ul>
                                                                @for (int i = 0; i < item.Warnings.Count; i++)
                                                                {
                                                                    <li>@item.Warnings[i]</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    }
                                                </div>
                                                @if (Model.ShowSku)
                                                {
                                                    <div class="sku nobr">
                                                        @T("ShoppingCart.SKU"):
                                                        @item.Sku
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>
                                                        @T("ShoppingCart.UnitPrice")
                                                    </th>
                                                    <th>
                                                        @T("ShoppingCart.Quantity")
                                                    </th>
                                                    <th class="end">
                                                        @T("ShoppingCart.ItemTotal")
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="cart-item-row">
                                                    <td class="unit-price nobr">
                                                        <span class="product-unit-price">@item.UnitPrice</span>
                                                    </td>
                                                    <td class="qty nobr">
                                                        @if (Model.IsEditable)
                                                        {
                                                            if (item.AllowedQuantities.Count > 0)
                                                            {
                                                                <select name="itemquantity@(item.Id)" class="qty-dropdown form-control">
                                                                    @foreach (var qty in item.AllowedQuantities)
                                                                    {
                                                                        <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                                    }
                                                                </select>
                                                            }
                                                            else
                                                            {
                                                                <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input form-control" autocomplete="off" />
                                                            }

                                                        }
                                                        else
                                                        {
                                                            <span>@item.Quantity</span>
                                                        }
                                                    </td>
                                                    <td class="subtotal nobr end">
                                                        <span class="product-subtotal">@item.SubTotal</span>
                                                        @if (!String.IsNullOrEmpty(item.Discount))
                                                        {
                                                            <div class="discount">
                                                                @T("ShoppingCart.ItemYouSave"): @item.Discount
                                                            </div>
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @if (Model.IsEditable)
                {
                    <div class="update-continue-button">
                        <div class="common-buttons pull-right">
                            <div class="continue-shopping"><input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-link" /></div>
                            <div class="update-cart"><input type="submit" name="updatecart" onclick="ordertable();" value="@T("ShoppingCart.UpdateCart")" class="button button-3d button-small button-rounded button-teal" /></div>
                        </div>
                    </div>
                }
            </div>
            if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
            {
                var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                //of course, you can modify appropriate locales to include VAT info there
                <div class="tax-shipping-info">
                    @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </div>
            }

            <div class="cart-footer row">
                @Html.Widget("order_summary_cart_footer")

                @if (Model.IsEditable)
                {
                    if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                    {
                        <div class="col-md-12">
                            <div class="min-amount-warning">
                                @Model.MinOrderSubtotalWarning
                            </div>
                        </div>
                    }
                }
                @*Helpful Information Fully Dynamic Alex Kang*@
                @if (Model.IsEditable)
                {
                    <div class="col-sm-4 col-md-3">
                        @Html.Partial("HelpfulInformation")
                    </div>
                }

                @if (Model.IsEditable)
                {
                    <div class="col-sm-4 col-md-3">
                        <div class="cart-collaterals">
                            <div class="gbs-panel-white">
                                @Html.Partial("_DiscountBox", Model.DiscountBox)
                                @Html.Widget("order_summary_content_deals")
                            </div>
                            <div class="gbs-panel-white">
                                @Html.Partial("_GiftCardBox", Model.GiftCardBox)
                            </div>
                        </div>
                    </div>
                }
                @if (Model.IsEditable)
                {
                    <div class="col-sm-4 col-md-3">
                        <div class="gbs-panel-white">
                            @Html.Partial("EstimateShipping", Model.EstimateShipping)
                        </div>
                    </div>
                }
                <div class="col-xs-offset-0 col-sm-offset-3 col-md-offset-0 col-xs-12 col-sm-6 col-md-3 pull-right order-totals">
                    <div class="totals">
                        @Html.Action("GBSOrderTotals", "GBSShoppingCart", new { isEditable = true })
                        @if (Model.IsEditable)
                        {

                            <div class="checkout-buttons">
                                @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                                {
                                    <script type="text/javascript">
                                        $(document).ready(function () {
                                            $('#checkout').click(function () {
                                                //terms of services
                                                var termOfServiceOk = true;
                                                if ($('#termsofservice').length > 0) {
                                                    //terms of service element exists

                                                    if (!$('#termsofservice').is(':checked')) {
                                                        //$("#terms-of-service-warning-box").dialog();
                                                        $("#terms-of-service-warning-box").modal();
                                                        termOfServiceOk = false;
                                                    }
                                                    else {
                                                        termOfServiceOk = true;
                                                    }

                                                }
                                                return termOfServiceOk;
                                            });
                                        });
                                    </script>
                                    <button type="submit" id="checkout" name="checkout" value="checkout" class="button button-rounded button-reveal button-large button-green tright">
                                        <i class="icon-line-arrow-right"></i> <span>@T("Checkout.Button")</span>
                                    </button>
                                }
                            </div>
                            <div class="addon-buttons">
                                @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                @Html.Partial("_ButtonPaymentMethod", Model)
                            </div>

                            <div class="card-image-section-wrap  mt-1">
                                @Html.Partial("_CardImage")
                            </div>
                        }
                    </div>
                </div>
            </div>
            if (Model.IsEditable)
            {
                @Html.Action("CrossSellProducts", "Product")
            }
        }
    }
    else
    {
        <div class="no-data">
            @Html.Action("TopicBlock", "Topic", new { systemName = "ncc_ shopping_cart_empty_message" })
        </div>
        <div>
            @Html.Action("HomepageCategories", "Catalog")
        </div>
    }
    @Html.Widget("order_summary_content_after")
</div>
@*JavaScript for mobile and desktop resize*@
<script type="text/javascript">
    function ordertable() {
        var docWidth = $(document).width();
        if (docWidth > 767) {
            //mobile
            $("tr.mobile-duplicate").html("");
        } else {
            //desktop
            $("tr.desktop-original").html("");
        }
    }
</script>