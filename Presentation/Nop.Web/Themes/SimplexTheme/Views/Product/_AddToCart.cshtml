@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;
@if (Model.UpdatedShoppingCartItemId > 0)
{
    @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
<div class="add-to-cart">
    @if (Model.CustomerEntersPrice)
    {
        <div class="customer-entered-price clearfix">
            <div class="price-input">
                @*@Html.LabelFor(model => model.CustomerEnteredPrice, new { @class = "enter-price-label" }, ":")*@
                <label asp-for="CustomerEnteredPrice" asp-postfix=":" class="enter-price-label"></label>
                @*round price*@
                @Html.TextBox("CustomerEnteredPrice", Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice)), new { @class = "enter-price-input form-control" })
            </div>
            <div class="price-range alert alert-info">
                @Model.CustomerEnteredPriceRange
            </div>
        </div>
    }
    @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
    {
        <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
    }
    @if (!Model.DisableBuyButton)
    {
        <div class="add-to-cart-panel">
            <div class="quantity-box">
                <div class="enter-quantity">
                    Enter Quantity:
                    @*@Html.LabelFor(model => model.EnteredQuantity, new { @class = "qty-label" }, ":")*@
                </div>
                @if (Model.AllowedQuantities.Count > 0)
                {
                    @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty- dropdown form-control" })
                }
                else
                {
                    <div class="addtocart-quantity-box">
                        @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty-input form-control", @onkeyup = "ChangeQuantity1(this)", @data_productid = Model.ProductId })
                        <span class="increase-quantity" onclick="IncreaseQuantity(@Html.IdFor(model => model.EnteredQuantity));"><i class="fa fa-plus" aria-hidden="true"></i></span>
                        <span class="decrease-quantity" onclick="DecreaseQuantity(@Html.IdFor(model => model.EnteredQuantity));"><i class="fa fa-minus" aria-hidden="true"></i></span>
                    </div>
                    //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $("#@Html.IdFor(model => model.EnteredQuantity)").keydown(function(event) {
                                if (event.keyCode == 13) {
                                    $("#add-to-cart-button-@Model.ProductId").click();
                                    return false;
                                }
                            });
                        });
                    </script>
                }
            </div>
            @{
                var addToCartText = "";
                if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                {
                    addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                }
                else
                {
                    addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                }
                <div class="product-add-button">
                    @* <input id="add-to-cart-button-@Model.ProductId"  type="button" class=" btn btn-primary add-to-cart-button" value="@(Model.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" />*@

                    <button id="add-to-cart-button-@Model.ProductId" type="submit" class=" button button-rounded button-reveal button-small button-green tright" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;">

                        <i class="icon-line-arrow-right"></i><span> @(Model.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))</span>
                    </button>

                    @*<a  data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" class="button button-3d button-rounded button-green"><i class="icon-shopping-cart"></i>@(Model.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))</a>*@
                </div>
            }
        </div>
    }
    @*@await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_add_info", additionalData = Model.ProductId })*@
    @*@await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_add_info", additionalData = Model.ProductId })*@
</div>
<script type="text/javascript">
    var done = false;
    var everythingLoaded = setInterval(function () {
        if (/loaded|complete/.test(document.readyState) && !done) {
            clearInterval(everythingLoaded);
            $(".qty-input").each(function (index) {
                ChangeQuantity1(this);
            }); 
          //  ChangeQuantity1($(".qty-input")); // this is the function that gets called when everything is loaded
            done = true;
        }
    }, 100);
</script>
                }
