@model CheckoutShippingMethodModel
@using Nop.Web.Models.Checkout;
@{
    
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-shipping-method-page");
        
}

<div class="page checkout-page shipping-method-page">

    @Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Shipping })
    
    <div class="shipping-address-title">
        <h3>@T("Checkout.SelectShippingMethod")</h3>
    </div>
    @*<p>STUFF TEST</p>*@
    <div class="page-body checkout-data">
        <div class="section shipping-method">   
    
            @using (Html.BeginRouteForm("CheckoutShippingMethod", FormMethod.Post))
        {

                @Html.Widget("checkout_shipping_method_top")
                if (Model.Warnings.Count == 0)
                {
                    <ul class="method-list">
                        @for (int i = 0; i < Model.ShippingMethods.Count; i++)
                        {
                            var shippingMethod = Model.ShippingMethods[i];
                            <li>
                                <div class="method-name">
                                    <label class="radio" for="shippingoption_@(i)">
                                        <input id="shippingoption_@(i)" type="radio" name="shippingoption" value="@(shippingMethod.Name)___@(shippingMethod.ShippingRateComputationMethodSystemName)" checked="@shippingMethod.Selected" />
                                        @shippingMethod.Name (@shippingMethod.Fee)
                                    </label>
                                    @if (!String.IsNullOrEmpty(shippingMethod.Description))
                                    {
                                        <div class="method-description">
                                            @Html.Raw(shippingMethod.Description)
                                        </div>
                                    }
                                </div>

                            </li>
                        }
                    </ul>
                    if (Model.NotifyCustomerAboutShippingFromMultipleLocations)
                    {
                        <div class="multiple-locations">
                            @T("Checkout.ShippingMethod.ShippingFromMultipleLocations")
                        </div>
                    }
                    <div class="form-group row next-btn-wrapper">
                        <div class="col-md-12">
                            @*<input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary shipping-method-next-step-button" />*@


                            <button type="submit" name="nextstep" class="button button-rounded button-reveal button-small button-green tright"><i class="icon-line-arrow-right"></i><span>@T("Checkout.NextButton")</span></button>

                        </div>
                    </div>
                }
                else
                {
                    <div class="message-error">
                        <ul>
                            @foreach (var warning in Model.Warnings)
                            {
                                <li>@warning</li>
                            }
                        </ul>
                    </div>
                }
                @Html.Widget("checkout_shipping_method_bottom")
            }
        </div>

        @*@Html.Widget("checkout_shipping_method_bottom")*@
        @*<div class="section order-summary-body">
                <div class="title small-heading">bottom
                    <strong>@T("Checkout.OrderSummary")</strong>
                </div>
                @Html.Action("OrderSummary", "ShoppingCart")
            </div>*@
    </div>
</div>

