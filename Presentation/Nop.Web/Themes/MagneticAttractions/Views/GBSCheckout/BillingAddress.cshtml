@model CheckoutBillingAddressModel
@using Nop.Web.Models.Checkout;

<div class="page checkout-page col-sm-9 col-md-9 gbs-margin-bottom-20">
    @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Payment })

    <div class="page-body gbs-checkout-border gbs-padding-15 row">
        <div class="page-title panel-heading">
            <h3>@T("Checkout.BillingAddress")</h3>
        </div>
        <div class="page-body checkout-data new-billing-form-wrap">
            @using (Html.BeginRouteForm("CheckoutBillingAddress", FormMethod.Post))
            {
                <div class="enter-address">
                    <div class="message-error">
                        @{
                            var validationSummary = Html.ValidationSummary(true);
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(validationSummary.ToHtmlString()))
                    {
                        <div class="message-error">@validationSummary</div>
                    }
                    <div class="enter-address-body form-horizontal gbs-padding-15">
                        @{
                            var dataDictAddress = new ViewDataDictionary(ViewData);
                            //Merge ModelState (required for validation)
                            dataDictAddress.ModelState.Merge(ViewData.ModelState);
                            dataDictAddress.TemplateInfo.HtmlFieldPrefix = "BillingNewAddress";
                            @Html.Partial("_CreateOrUpdateAddress", Model.BillingNewAddress, dataDictAddress)
                        }
                    </div>
                </div>

                <div class="form-group row next-btn-wrapper">
                    <div class="col-md-6">
                        @*<input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="button button-3d button-small button-rounded button-green" />*@
                        <button type="submit" name="nextstep" class="button button-rounded button-reveal button-small button-green tright"><i class="icon-line-arrow-right"></i><span>@T("Checkout.NextButton")</span></button>
                    </div>
                </div>

                            }
        </div>
        <div class="clear"></div>
        <div class="gbs-required-field-wrap">
            <span class="gbs-required">*</span> Required Field
        </div>
    </div>
</div>

<div class="col-sm-3 col-md-3">
     @await Component.InvokeAsync("GBSOrderTotals", new { additionalData = true })
</div>
